# 6-3. Glossary: A Python dictionary can be used to model an actual dictionary. 
# However, to avoid confusion, let’s call it a glossary.

# Think of five programming words you’ve learned about in the previous chapters. 
# Use these words as the keys in your glossary, and store their meanings as values.

glossary = {'List':'Lists are used to store multiple items in a single variable.', 
            'Slice':'The slice() function returns a slice object that can use used to slice strings, lists, tuple etc.',
            'Tuple':'Tuples are used to store multiple items in a single variable.',
            'Set':'Sets are used to store multiple items in a single variable.',
            'List Comprehensionion':'List comprehension offers a shorter syntax when you want to create a new list based on the values of an existing list.',
            }

# Print each word and its meaning as neatly formatted output. 
# You might print the word followed by a colon and then its 
# meaning, or print the word on one line and then print its 
# meaning indented on a second line. # Use the newline character 
# (\n) to insert a blank line between each word-meaning pair in your output.  
# Use a key, value loop to print the glossary

term = "Term:"
definition = "Definition:"
for key, value in glossary.items():
    print(f"{term} {key}")
    print(f"{definition} {value}")
    print("\n")
